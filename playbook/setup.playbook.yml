---
- name: Setup Sentry
  hosts: all
  become: true
  gather_facts: true
  vars_prompt: []
    # - name: deploy_env
    #   prompt: "Which Environment should we target?(dev,prod)"
    #   private: no
    #   default: "dev"
    # - name: user_loging
    #   prompt: "Which user should i use?"
    #   private: no
    #   default: "nikola"
  vars_files:
    - default.yml
  # roles:
  #   - ""
  handlers: []
  roles:
    - role: geerlingguy.pip
      vars:
        pip_install_packages:
          - name: docker
    - role: geerlingguy.docker
      vars:
        docker_compose_version: "v2.12.2"

  pre_tasks:
    # BEGIN TEST TASKS
    - name: Update apt cache.
      apt: update_cache=yes cache_valid_time=600
      when: ansible_os_family == 'Debian'

    - name: Wait for systemd to complete initialization.  # noqa 303
      command: systemctl is-system-running
      register: systemctl_status
      until: >
        'running' in systemctl_status.stdout or
        'degraded' in systemctl_status.stdout
      retries: 30
      delay: 5
      when: ansible_service_mgr == 'systemd'
      changed_when: false
      failed_when: systemctl_status.rc > 1
    # END TEST TASKS
    - name: Execute prerequsites
      ansible.builtin.include_tasks: tasks/prerequisites.yml
    # - source parse-cli.sh
    # - TODO: source detect-platform.sh
    # - eh? source dc-detect-version.sh
    # - eh? source error-handling.sh
    # - wat? trap_with_arg cleanup ERR INT TERM EXIT
    # - source check-latest-commit.sh
    - name: Execute check-latest-commit
      ansible.builtin.include_tasks: tasks/check-latest-commit.yml

    # - source check-minimum-requirements.sh

  tasks: []
    # - include_tasks:
  post_tasks: []
